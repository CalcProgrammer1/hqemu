{"name":"Hqemu","tagline":"An efficient and retargetable dynamic binary translator on multicores","body":"### HQEMU\r\nHQEMU is a multi-threaded DBT prototype using QEMU (a popular retargetable DBT for system virtualization) and LLVM (Low Level Virtual Machine) as our building blocks. HQEMU could improve QEMU performance by a factor of 2.4X and 4X on the SPEC 2006 integer and floating point benchmarks for x86 to x86-64 emulations, respectively, i.e. it is only 2.5X and 2.1X slower than native execution of the same benchmarks on x86-64, as opposed to 6X and 8.4X slowdown on QEMU. For ARM to x86-64 emulation, HQEMU could gain a factor of 2.4X speedup over QEMU for the SPEC 2006 integer benchmarks.\r\n\r\nDemo Video:\r\n* [HQEMU User Mode with 32 threads](http://youtu.be/yDK-PKmqV10)\r\n\r\nyou can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### News\r\n**2014.07.21: Release HQEMU-0.13**\r\n\r\n### Quickstart\r\n\r\n### Paper\r\n* Hong, Ding-Yong and Hsu, Chun-Chen and Yew, Pen-Chung and Wu, Jan-Jan and Hsu, Wei-Chung and Liu, Pangfeng and Wang, Chien-Min and Chung, Yeh-Ching, _\"HQEMU: a multi-threaded and retargetable dynamic binary translator on multicores\"_, Proceedings of the Tenth International Symposium on Code Generation and Optimization (CGO'12), [PDF](http://computersystemlab.github.io/hqemu/papers/hqemu-cgo12.pdf)\r\n* Ding-Yong Hong, Jan-Jan Wu, Pen-Chung Yew, Wei-Chung Hsu, Chun-Chen Hsu, Pangfeng Liu, Chien-Min Wang, and Yeh-Ching Chung, _\"Efficient and Retargetable Dynamic Binary Translation on Multicores\"_, IEEE Transactions on Parallel and Distributed Systems (TPDS'14), [PDF](http://computersystemlab.github.io/hqemu/papers/hqemu-tpds14.pdf)\r\n\r\n### Contact\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}